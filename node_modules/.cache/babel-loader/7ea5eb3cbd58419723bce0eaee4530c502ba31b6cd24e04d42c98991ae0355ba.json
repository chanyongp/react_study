{"ast":null,"code":"var _jsxFileName = \"/Users/parkchan-yong/Documents/GitHub/react_study/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction result(num1, opr, num2) {\n  return eval(num1 + opr + num2);\n}\nfunction App() {\n  _s();\n  const [inputs, setInputs] = useState({\n    num1: '',\n    opr: '',\n    num2: ''\n  });\n  const {\n    num1,\n    opr,\n    num2\n  } = inputs;\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value\n    });\n  };\n  let calculate = (n1, operator, n2) => {\n    let result = 0;\n    switch (operator) {\n      case '+':\n        result = Number(n1) + Number(n2);\n        break;\n      case '-':\n        result = Number(n1) - Number(n2);\n        break;\n      case 'x':\n        result = Number(n1) * Number(n2);\n        break;\n      case '/':\n        result = Number(n1) / Number(n2);\n        break;\n      default:\n        break;\n    }\n    return String(result);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Get Inputs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"num1\",\n          onChange: onChange,\n          value: num1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"opr\",\n          onChange: onChange,\n          value: opr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"num2\",\n          onChange: onChange,\n          value: num2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Rendered\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [num1, opr, num2, \"=\", calculate(num1, opr, num2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XxeBSpkFcN1+xA0uczwT203Rx4I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","result","num1","opr","num2","eval","App","_s","inputs","setInputs","onChange","e","value","name","target","calculate","n1","operator","n2","Number","String","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/parkchan-yong/Documents/GitHub/react_study/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction result(num1, opr, num2) {\n  return eval(num1 + opr + num2)\n}\n\nfunction App() {\n\n  const [inputs, setInputs] = useState({\n    num1: '',\n    opr: '',\n    num2: ''\n  });\n  const { num1, opr, num2 } = inputs;\n  const onChange = (e) => {\n    const { value, name } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value\n    });\n  }\n\n  let calculate = (n1, operator, n2) => {\n    let result = 0;\n    switch (operator) {\n      case '+':\n        result = Number(n1) + Number(n2);\n        break;\n      case '-':\n        result = Number(n1) - Number(n2);\n        break;\n      case 'x':\n        result = Number(n1) * Number(n2);\n        break;\n      case '/':\n        result = Number(n1) / Number(n2);\n        break;\n      default:\n        break;\n    }\n    return String(result);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n          Get Inputs\n        </div>\n        <div>\n          <input name=\"num1\" onChange={onChange} value={num1} />\n          <input name=\"opr\" onChange={onChange} value={opr} />\n          <input name=\"num2\" onChange={onChange} value={num2} />\n        </div>\n        <div>\n          Rendered<br></br>\n        </div>\n\n        <div>\n          {num1}{opr}{num2}={calculate(num1, opr, num2)}\n        </div>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}